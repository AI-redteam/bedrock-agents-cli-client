
# ptchat/bedrock_client.py
import boto3
from botocore.exceptions import ClientError
from typing import Optional, Dict

def retrieve_and_generate(config: Dict, user_input: str, session_id: Optional[str] = None) -> Dict:
    """
    Calls the Bedrock retrieve_and_generate API.
    Returns the full response dictionary from the API.
    """
    try:
        bedrock_agent_runtime = boto3.client(
            service_name="bedrock-agent-runtime", 
            region_name=config.get("region", "us-east-1") # Or your preferred region
        )

        request_args = {
            "input": {"text": user_input},
            "retrieveAndGenerateConfiguration": {
                "type": "KNOWLEDGE_BASE",
                "knowledgeBaseConfiguration": {
                    "knowledgeBaseId": config["knowledge_base_id"],
                    "modelArn": config["model_arn"],
                },
            },
        }

        if session_id:
            request_args["sessionId"] = session_id

        return bedrock_agent_runtime.retrieve_and_generate(**request_args)

    except ClientError as e:
        # Return a structured error
        error_code = e.response.get("Error", {}).get("Code")
        error_message = e.response.get("Error", {}).get("Message")
        return {"error": f"An AWS error occurred ({error_code}): {error_message}"}
    except Exception as e:
        return {"error": f"An unexpected error occurred: {e}"}
